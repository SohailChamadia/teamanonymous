{"version":3,"sources":["webpack:///./src/app/owner/owner-create/owner-create.component.css","webpack:///./src/app/owner/owner-create/owner-create.component.html","webpack:///./src/app/owner/owner-create/owner-create.component.ts","webpack:///./src/app/owner/owner-details/account-data/account-data.component.css","webpack:///./src/app/owner/owner-details/account-data/account-data.component.html","webpack:///./src/app/owner/owner-details/account-data/account-data.component.ts","webpack:///./src/app/owner/owner-details/owner-data/owner-data.component.css","webpack:///./src/app/owner/owner-details/owner-data/owner-data.component.html","webpack:///./src/app/owner/owner-details/owner-data/owner-data.component.ts","webpack:///./src/app/owner/owner-details/owner-details.component.css","webpack:///./src/app/owner/owner-details/owner-details.component.html","webpack:///./src/app/owner/owner-details/owner-details.component.ts","webpack:///./src/app/owner/owner-list/owner-list.component.css","webpack:///./src/app/owner/owner-list/owner-list.component.html","webpack:///./src/app/owner/owner-list/owner-list.component.ts","webpack:///./src/app/owner/owner-routing/owner-routing.module.ts","webpack:///./src/app/owner/owner.module.ts","webpack:///./src/app/shared/error-handler.service.ts","webpack:///./src/app/shared/repository.service.ts"],"names":[],"mappings":"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","file":"owner-owner-module.js","sourcesContent":["module.exports = \"mat-form-field{\\n    width: 500px;\\n    padding: 20px 40px 20px 40px;\\n}\\n\\nmat-card-title{\\n    text-align: center;\\n}\\n\\n.mat-radio-button {\\n    margin-right: 16px;\\n    \\n  }\\n\\nmat-form-field.example-full-width {\\n    width: 80%;\\n  }\\n\\ndiv.radio-div {\\n      display: inline-block;\\n      width: 500px;\\n    padding: 20px 40px 20px 40px;\\n  }\\n\\nmat-radio-group.radio-item{\\n      display: flex;\\n      flex-wrap: wrap;\\n      flex-basis: auto;\\n      flex: 1 1 0;\\n  }\\n\\n.mat-subheader {\\n      padding-left: 0px !important;\\n      margin: 0px;\\n      \\n  }\\n\\n.mat-radio-button {\\n      padding-right: 16px;\\n      margin-bottom: 16px;\\n\\n  }\"","module.exports = \"<section fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"center center\\\">\\n  <mat-card fxFlex.xs=\\\"100%\\\" padding=\\\"0px\\\">\\n    <mat-card-title>Employee Details</mat-card-title>\\n    <form [formGroup]=\\\"ownerForm\\\" autocomplete=\\\"off\\\" novalidate (ngSubmit)=\\\"createOwner(ownerForm.value)\\\"\\n      fxLayout=\\\"column wrap\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"10px\\\">\\n      <mat-card-content>\\n        ￼\\n\\n        <mat-form-field width=\\\"40%\\\" padding=\\\"20px\\\">\\n          <input matInput type=\\\"text\\\" placeholder=\\\"EMPLOYEE ID *\\\" formControlName=\\\"emp_id\\\" id=\\\"emp_id\\\">\\n          <mat-hint align=\\\"end\\\">Exactly 7 characters long.</mat-hint>\\n          <mat-error *ngIf=\\\"hasError('emp_id', 'required')\\\">ID is required</mat-error>\\n          <mat-error *ngIf=\\\"hasError('emp_id', 'maxlength')\\\"> 7 characters</mat-error>\\n        </mat-form-field>\\n\\n\\n        <mat-form-field width=\\\"40%\\\" padding=\\\"20px\\\">\\n          <input matInput type=\\\"text\\\" placeholder=\\\"EMPLOYEE NAME\\\" formControlName=\\\"emp_name\\\" id=\\\"emp_name\\\">\\n          <mat-hint align=\\\"end\\\">Not more then 60 characters long.</mat-hint>\\n          <mat-error *ngIf=\\\"hasError('emp_name', 'required')\\\">Name is required</mat-error>\\n          <mat-error *ngIf=\\\"hasError('emp_name', 'maxlength')\\\">You have more than 60 characters</mat-error>\\n        </mat-form-field>\\n\\n\\n        <div class=\\\"radio-div\\\">\\n          <h3 mat-subheader align=\\\"center\\\">Gender</h3>\\n          <mat-radio-group formControlName=\\\"gender\\\">\\n            <mat-radio-button value=\\\"M\\\">Male</mat-radio-button>\\n            <mat-radio-button value=\\\"F\\\">Female</mat-radio-button>\\n            <mat-radio-button value=\\\"O\\\">Others</mat-radio-button>\\n          </mat-radio-group>\\n        </div>\\n\\n        <div class=\\\"radio-div\\\">\\n          <h3 mat-subheader align=\\\"center\\\">Family History</h3>\\n          <mat-radio-group formControlName=\\\"family_history\\\">\\n            <mat-radio-button value=\\\"Yes\\\">Yes</mat-radio-button>\\n            <mat-radio-button value=\\\"No\\\">No</mat-radio-button>\\n          </mat-radio-group>\\n        </div>\\n\\n        <div class=\\\"radio-div\\\">\\n          <h3 mat-subheader align=\\\"center\\\">Work Interfere</h3>\\n          <mat-radio-group formControlName=\\\"work_interfere\\\">\\n            <mat-radio-button value=\\\"NA\\\">NA</mat-radio-button>\\n            <mat-radio-button value=\\\"Often\\\">Often</mat-radio-button>\\n            <mat-radio-button value=\\\"Rarely\\\">Rarely</mat-radio-button>\\n            <mat-radio-button value=\\\"Sometimes\\\">Sometimes</mat-radio-button>\\n            <mat-radio-button value=\\\"Never\\\">Never</mat-radio-button>\\n          </mat-radio-group>\\n        </div>\\n\\n        <div class=\\\"radio-div\\\">\\n          <h3 mat-subheader align=\\\"center\\\">Benefits</h3>\\n          <mat-radio-group formControlName=\\\"benefits\\\">\\n            <mat-radio-button value=\\\"Yes\\\">Yes</mat-radio-button>\\n            <mat-radio-button value=\\\"No\\\">No</mat-radio-button>\\n          </mat-radio-group>\\n        </div>\\n\\n        <div class=\\\"radio-div\\\">\\n          <h3 mat-subheader align=\\\"center\\\">Care Options</h3>\\n          <mat-radio-group formControlName=\\\"care_options\\\">\\n            <mat-radio-button value=\\\"Yes\\\">Yes</mat-radio-button>\\n            <mat-radio-button value=\\\"No\\\">No</mat-radio-button>\\n          </mat-radio-group>\\n        </div>\\n\\n        <div class=\\\"radio-div\\\">\\n          <h3 mat-subheader align=\\\"center\\\">Observable Consequence</h3>\\n          <mat-radio-group formControlName=\\\"obs_consequence\\\">\\n            <mat-radio-button value=\\\"Yes\\\">Yes</mat-radio-button>\\n            <mat-radio-button value=\\\"No\\\">No</mat-radio-button>\\n          </mat-radio-group>\\n        </div>\\n        <div class=\\\"radio-div\\\">\\n          <h3 mat-subheader align=\\\"center\\\">Anonymity</h3>\\n          <mat-radio-group class=\\\"radio-item\\\" formControlName=\\\"anonymity\\\">\\n            <mat-radio-button value=\\\"Yes\\\">Yes</mat-radio-button>\\n            <mat-radio-button value=\\\"No\\\">No</mat-radio-button>\\n          </mat-radio-group>\\n        </div>\\n\\n        <div class=\\\"radio-div\\\">\\n          <h3 mat-subheader align=\\\"center\\\">Leave</h3>\\n          <mat-radio-group class=\\\"radio-item\\\" formControlName=\\\"leave\\\">\\n            <mat-radio-button value=\\\"Don't know\\\">Don't Know</mat-radio-button>\\n            <mat-radio-button value=\\\"Somewhat difficult\\\">Somewhat Difficult</mat-radio-button>\\n            <mat-radio-button value=\\\"Somewhat easy\\\">Somewhat Easy</mat-radio-button>\\n            <mat-radio-button value=\\\"Very easy\\\">Very Easy</mat-radio-button>\\n            <mat-radio-button value=\\\"Very difficult\\\">Very Difficult</mat-radio-button>\\n          </mat-radio-group>\\n        </div>\\n\\n\\n        <mat-form-field class=\\\"example-full-width\\\" formControlNAme=\\\"comments\\\">\\n          <textarea matInput placeholder=\\\"Leave a comment\\\"></textarea>\\n        </mat-form-field>\\n\\n      </mat-card-content>\\n      <mat-card-actions align=\\\"center\\\">\\n        <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!ownerForm.valid\\\">Create</button>\\n        <button type=\\\"button\\\" mat-raised-button color=\\\"warn\\\" (click)=\\\"onCancel()\\\">Cancel</button>\\n      </mat-card-actions>\\n\\n      <ngx-spinner bdOpacity=0.6 bdColor=\\\"#333\\\" size=\\\"medium\\\" color=\\\"#fff\\\" type=\\\"ball-atom\\\" [fullScreen]=\\\"true\\\">\\n        <p style=\\\"color: white\\\"> Processing... </p>\\n      </ngx-spinner>\\n    </form>\\n  </mat-card>\\n</section>\"","import { RepositoryService } from './../../shared/repository.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Location } from '@angular/common';\nimport { OwnerForCreation } from '../../_interface/ownerForCreation.model';\nimport { MatDialog } from '@angular/material';\nimport { SuccessDialogComponent } from '../../shared/dialogs/success-dialog/success-dialog.component';\nimport { ErrorHandlerService } from '../../shared/error-handler.service'\nimport { NgxSpinnerService,NgxSpinnerModule } from \"ngx-spinner\";\n\n@Component({\n  selector: 'app-owner-create',\n  templateUrl: './owner-create.component.html',\n  styleUrls: ['./owner-create.component.css']\n})\nexport class OwnerCreateComponent implements OnInit {\n  public ownerForm: FormGroup;\n  private dialogConfig;\n\n  constructor(private location: Location, private repository: RepositoryService, private dialog: MatDialog, private errorService: ErrorHandlerService, private spinner: NgxSpinnerService) { }\n\n  ngOnInit() {\n    this.ownerForm = new FormGroup({\n      emp_name: new FormControl('', [Validators.required, Validators.maxLength(60)]),\n      emp_id:new FormControl('',[Validators.required, Validators.maxLength(6)]),\n      comments: new FormControl('',[Validators.maxLength(1000)]),\n      gender: new FormControl('',[Validators.required]),\n      family_history: new FormControl('',[Validators.required]),\n      work_interfere: new FormControl('',[Validators.required]),\n      benefits: new FormControl('',[Validators.required]),\n      care_options: new FormControl('',[Validators.required]),\n      obs_consequence: new FormControl('',[Validators.required]),\n      leave: new FormControl('',[Validators.required]),\n      anonymity: new FormControl('',[Validators.required])\n    });\n\n    this.dialogConfig = {\n      height: '200px',\n      width: '400px',\n      disableClose: true,\n      data: {}\n    }\n  }\n\n  public hasError = (controlName: string, errorName: string) => {\n    return this.ownerForm.controls[controlName].hasError(errorName);\n  }\n\n  public onCancel = () => {\n    this.location.back();\n  }\n\n  public createOwner = (ownerFormValue) => {\n    if (this.ownerForm.valid) {\n      this.spinner.show();\n      this.executeOwnerCreation(ownerFormValue);\n    }\n  }\n\n  private executeOwnerCreation = (ownerFormValue) => {\n    let owner: OwnerForCreation = {\n      emp_name: ownerFormValue.emp_name,\n      emp_id: ownerFormValue.emp_id,\n      comments: ownerFormValue.comments,\n      gender: ownerFormValue.gender,\n      family_history: ownerFormValue.family_history,\n      work_interfere: ownerFormValue.work_interfere,\n      benefits: ownerFormValue.benefits,\n      care_options: ownerFormValue.care_options,\n      obs_consequence: ownerFormValue.obs_consequence,\n      leave: ownerFormValue.leave,\n      anonymity: ownerFormValue.anonymity\n    }\n\n    let apiUrl = '/predict';\n    this.repository.create(apiUrl, owner)\n      .subscribe(res => {\n        let dialogRef = this.dialog.open(SuccessDialogComponent, this.dialogConfig);\n        this.spinner.hide();\n        console.log(res);\n        //we are subscribing on the [mat-dialog-close] attribute as soon as we click on the dialog button\n        dialogRef.afterClosed()\n          .subscribe(result => {\n            this.location.back();\n          });\n      },\n        (error => {\n          console.log(error);\n          this.spinner.hide();\n          this.errorService.dialogConfig = { ...this.dialogConfig };\n          this.errorService.handleError(error);\n        })\n      )\n  }\n\n}\n","module.exports = \".text-color {\\n    color: #3f51b5;\\n}\\n\\nmat-accordion{\\n    margin-top: 20px;\\n}\"","module.exports = \"<section fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"center center\\\">\\n    <mat-accordion fxFlex=\\\"500px\\\" fxFlex.xs=\\\"100%\\\">\\n        <mat-expansion-panel *ngFor=\\\"let account of accounts; let i = index\\\">\\n          <mat-expansion-panel-header>\\n            <mat-panel-title>\\n              {{i+1}}. Account\\n            </mat-panel-title>\\n            <mat-panel-description>\\n              Account Information\\n            </mat-panel-description>\\n          </mat-expansion-panel-header>      \\n          <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"center center\\\">\\n            <div fxFlex=\\\"35%\\\" class=\\\"text-color\\\"><strong>type:</strong> &nbsp; {{account?.accountType}}</div>\\n            <div fxFlex class=\\\"text-color\\\"><strong>created:</strong> &nbsp; {{account?.dateCreated | date}}</div>\\n          </div>\\n\\n        </mat-expansion-panel>\\n      </mat-accordion>\\n</section>\\n\"","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-account-data',\n  templateUrl: './account-data.component.html',\n  styleUrls: ['./account-data.component.css']\n})\nexport class AccountDataComponent implements OnInit {\n  @Input() public accounts: Account[];\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"mat-card-content, mat-card-title, mat-card-actions {\\n    text-align: center;\\n}\\n\\nmat-card-content{\\n    padding-top: 20px;\\n    padding-bottom: 20px;\\n}\\n\\n.advanced-color{\\n    color: #3f51b5;\\n}\\n\\n.beginner-color{\\n    color: #f44336;\\n}\"","module.exports = \"<section fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"center center\\\">\\n    <mat-card fxFlex=\\\"500px\\\" fxFlex.xs=\\\"100%\\\">\\n        <mat-card-title>Details for the clicked owner</mat-card-title>\\n        <mat-card-content>\\n          <div fxLayout=\\\"column wrap\\\" fxLayoutGap=\\\"40px\\\">\\n            <div fxLayout=\\\"row wrap\\\" fxFlex>\\n              <div fxFlex><strong>Owner's name:</strong></div>\\n              <div fxFlex>{{owner?.name}}</div>\\n            </div>\\n      \\n            <div fxLayout=\\\"row wrap\\\" fxFlex>\\n              <div fxFlex><strong>Date of birth:</strong></div>\\n              <div fxFlex>{{owner?.dateOfBirth | date}}</div>\\n            </div>\\n      \\n            <div fxLayout=\\\"row wrap\\\" fxFlex *ngIf='owner?.accounts.length <= 2; else advancedUser'>\\n              <div fxFlex><strong>Type of user:</strong></div>\\n              <div fxFlex class=\\\"beginner-color\\\">Beginner user.</div>\\n            </div>\\n            <ng-template #advancedUser>\\n              <div fxLayout=\\\"row wrap\\\" fxFlex>\\n                <div fxFlex><strong>Type of user:</strong></div>\\n                <div fxFlex class=\\\"advanced-color\\\">Advanced user</div>\\n              </div>\\n            </ng-template>\\n          </div>\\n        </mat-card-content>\\n        <mat-card-actions>\\n          <mat-form-field>\\n            <mat-select placeholder=\\\"Show accounts\\\" (selectionChange)=\\\"onChange($event)\\\">\\n              <mat-option *ngFor=\\\"let opt of selectOptions\\\" [value]=\\\"opt.value\\\">\\n                {{opt.name}}\\n              </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n        </mat-card-actions>\\n      </mat-card>\\n</section>\"","import { Owner } from './../../../_interface/owner.model';\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-owner-data',\n  templateUrl: './owner-data.component.html',\n  styleUrls: ['./owner-data.component.css']\n})\nexport class OwnerDataComponent implements OnInit {\n  @Input() public owner: Owner;\n  public selectOptions = [{name:'Show', value: 'show'}, {name: `Don't Show`, value: ''}];\n  @Output() selectEmitt = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  public onChange = (event) => {\n    this.selectEmitt.emit(event.value);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<app-owner-data [owner]='owner' (selectEmitt)='showAccounts = $event'></app-owner-data>\\n<app-account-data *ngIf='showAccounts' [accounts]='owner?.accounts'></app-account-data>\"","import { Component, OnInit } from '@angular/core';\nimport { Owner } from './../../_interface/owner.model';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { RepositoryService } from './../../shared/repository.service';\nimport { ErrorHandlerService } from './../../shared/error-handler.service';\n\n@Component({\n  selector: 'app-owner-details',\n  templateUrl: './owner-details.component.html',\n  styleUrls: ['./owner-details.component.css']\n})\nexport class OwnerDetailsComponent implements OnInit {\n  public owner: Owner;\n  public showAccounts;\n\n  constructor(private repository: RepositoryService, private router: Router, \n    private activeRoute: ActivatedRoute, private errorHandler: ErrorHandlerService) { }\n\n  ngOnInit() {\n    this.getOwnerDetails();\n  }\n\n  private getOwnerDetails = () =>{\n    let id: string = this.activeRoute.snapshot.params['id'];\n    let apiUrl: string = `api/owner/${id}/account`;\n \n    this.repository.getData(apiUrl)\n    .subscribe(res => {\n      this.owner = res as Owner;\n    },\n    (error) =>{\n      this.errorHandler.handleError(error);\n    })\n  }\n}\n","module.exports = \"table {\\n    width: 100%;\\n    overflow-x: auto;\\n    overflow-y: hidden;\\n}\\n\\nth.mat-header-cell {\\n    text-align: left;\\n    max-width: 300px!important;\\n}\"","module.exports = \"<div fxLayout fxLayout.lt-md=\\\"column wrap\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap.gt-sm=\\\"250px\\\" fxLayoutGap.lt.md=\\\"20px\\\">\\n  <mat-form-field>\\n    <input matInput type=\\\"text\\\" (keyup)=\\\"doFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n  </mat-form-field>\\n \\n</div>\\n<table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n  <ng-container matColumnDef=\\\"emp_id\\\">\\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> Emp Id </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.emp_id}} </td>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"emp_name\\\">\\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> Emp Name </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.emp_name}} </td>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"treatment\\\">\\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> Treatment </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.treatment}} </td>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"approval_status\\\">\\n    <th mat-header-cell *matHeaderCellDef> Approval Status </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.approval_status}}</td>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"update\\\">\\n      <th mat-header-cell *matHeaderCellDef> Accept </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\">\\n        <button mat-icon-button color=\\\"success\\\" [disabled]=\\\"element.approval_status!=='pending'\\\" (click)=\\\"redirectToUpdate(element.emp_id)\\\">\\n            <mat-icon class=\\\"mat-18\\\">check</mat-icon>\\n        </button>\\n      </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"delete\\\">\\n        <th mat-header-cell *matHeaderCellDef> Reject </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\">\\n          <button mat-icon-button color=\\\"warn\\\" [disabled]=\\\"element.approval_status!=='pending'\\\" (click)=\\\"redirectToDelete(element.emp_id)\\\">\\n              <mat-icon class=\\\"mat-18\\\">clear</mat-icon>\\n          </button>\\n        </td>\\n      </ng-container>\\n      <ngx-spinner bdOpacity=0.6 bdColor=\\\"#333\\\" size=\\\"medium\\\" color=\\\"#fff\\\" type=\\\"ball-atom\\\" [fullScreen]=\\\"true\\\">\\n          <p style=\\\"color: white\\\"> Processing... </p>\\n        </ngx-spinner>\\n\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n</table>\\n\\n<mat-paginator [pageSize]=\\\"2\\\" [pageSizeOptions]=\\\"[2, 4, 6, 10, 20]\\\">\\n</mat-paginator>\"","import { RepositoryService } from './../../shared/repository.service';\nimport { Component, OnInit, AfterViewInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource, MatSort, MatPaginator } from '@angular/material';\nimport { Owner } from '../../_interface/owner.model';\nimport { ErrorHandlerService } from '../../shared/error-handler.service';\nimport { Router } from '@angular/router';\nimport { NgxSpinnerService,NgxSpinnerModule } from \"ngx-spinner\";\n\n@Component({\n  selector: 'app-owner-list',\n  templateUrl: './owner-list.component.html',\n  styleUrls: ['./owner-list.component.css']\n})\nexport class OwnerListComponent implements OnInit, AfterViewInit {\n\n  public displayedColumns = ['emp_id', 'emp_name', 'treatment', 'approval_status', 'update', 'delete'];\n  public dataSource = new MatTableDataSource<Owner>(); \n\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  constructor(private repoService: RepositoryService, private errorService: ErrorHandlerService, private router: Router, private spinner: NgxSpinnerService) { }\n\n  ngOnInit() {\n    this.spinner.show();\n    this.getAllOwners();\n  }\n\n  ngAfterViewInit(): void {\n     this.dataSource.sort = this.sort;\n     this.dataSource.paginator = this.paginator;\n  }\n\n  public getAllOwners = () => {\n    this.repoService.getData('/approval_list')\n    .subscribe(res => {\n      console.log(res);\n      this.dataSource.data = res as Owner[];\n      this.spinner.hide();\n    },\n    (error) => {\n      console.log(error);\n      this.errorService.handleError(error);\n      this.spinner.hide();\n    })\n    //this.dataSource.data=[{\"emp_id\":\"eufbuj\",\"treatment\":\"No\",\"approval_status\":\"pending\",\"emp_name\":\"ducbuj\"},{\"emp_id\":\"djdb\",\"treatment\":\"No\",\"approval_status\":\"pending\",\"emp_name\":\"bfdj\"}];\n  }\n\n  public doFilter = (value: string) => {\n    this.dataSource.filter = value.trim().toLocaleLowerCase();\n  }\n\n  public redirectToDetails = (id: string) => {\n    let url: string = `/owner/details/${id}`;\n    //this.router.navigate([url]);\n  }\n\n  public redirectToUpdate = (id: string) => {\n    this.spinner.show();\n    this.repoService.getData(`/accept_approval/${id}`)\n    .subscribe(res => {\n      console.log(res);\n      this.getAllOwners();\n      \n    },\n    (error) => {  \n      console.log(error);\n      this.errorService.handleError(error);\n      this.spinner.hide();\n    })\n  }\n\n  public redirectToDelete = (id: string) => {\n    this.spinner.show();\n    this.repoService.getData(`/reject_approval/${id}`)\n    .subscribe(res => {\n      console.log(res);\n      this.getAllOwners();\n      \n    },\n    (error) => {\n      console.log(error);\n      this.errorService.handleError(error);\n      this.spinner.hide();\n    })  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { OwnerListComponent } from '../owner-list/owner-list.component';\nimport { OwnerDetailsComponent } from '../owner-details/owner-details.component';\nimport { OwnerCreateComponent } from '../owner-create/owner-create.component';\n\nconst routes: Routes = [\n  { path: 'owners', component: OwnerListComponent },\n  { path: 'details/:id', component: OwnerDetailsComponent},\n  { path: 'create', component: OwnerCreateComponent}\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes)\n  ],\n  exports: [\n    RouterModule\n  ],\n  declarations: []\n})\nexport class OwnerRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OwnerListComponent } from './owner-list/owner-list.component';\nimport { OwnerRoutingModule } from './owner-routing/owner-routing.module';\nimport { OwnerDetailsComponent } from './owner-details/owner-details.component';\nimport { OwnerDataComponent } from './owner-details/owner-data/owner-data.component';\nimport { AccountDataComponent } from './owner-details/account-data/account-data.component';\nimport { OwnerCreateComponent } from './owner-create/owner-create.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    OwnerRoutingModule,\n    ReactiveFormsModule,\n    SharedModule\n  ],\n  declarations: [OwnerListComponent, OwnerDetailsComponent, OwnerDataComponent, AccountDataComponent, OwnerCreateComponent]\n})\nexport class OwnerModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { MatDialog } from '@angular/material';\nimport { ErrorDialogComponent } from './dialogs/error-dialog/error-dialog.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ErrorHandlerService {\n  public errorMessage: string = '';\n  public dialogConfig;\n\n  constructor(private router: Router, private dialog: MatDialog) { }\n\n  public handleError(error: HttpErrorResponse){\n    if(error.status === 500){\n      this.handle500Error(error);\n    }\n    else if(error.status === 404){\n      this.handle404Error(error)\n    }\n    else{\n      this.handleOtherError(error);\n    }\n  }\n \n  private handle500Error(error: HttpErrorResponse){\n    this.createErrorMessage(error);\n    this.router.navigate(['/500']);\n  }\n \n  private handle404Error(error: HttpErrorResponse){\n    this.createErrorMessage(error);\n    this.router.navigate(['/404']);\n  }\n \n  private handleOtherError(error: HttpErrorResponse){\n    this.createErrorMessage(error);\n    this.dialogConfig.data = { 'errorMessage': this.errorMessage };\n    this.dialog.open(ErrorDialogComponent, this.dialogConfig);\n  }\n \n  private createErrorMessage(error: HttpErrorResponse){\n    this.errorMessage = error.error ? error.error : error.statusText;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from './../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RepositoryService {\n\n  constructor(private http: HttpClient) { }\n\n  public getData(route: string) {\n    return this.http.get(this.createCompleteRoute(route, environment.urlAddress));\n  }\n \n  public create(route: string, body) {\n    console.log(body)\n    return this.http.post(this.createCompleteRoute(route, environment.urlAddress), body, this.generateHeaders());\n  }\n \n  public update(route: string, body){\n    return this.http.put(this.createCompleteRoute(route, environment.urlAddress), body, this.generateHeaders());\n  }\n \n  public delete(route: string){\n    return this.http.delete(this.createCompleteRoute(route, environment.urlAddress));\n  }\n \n  private createCompleteRoute(route: string, envAddress: string) {\n    return `${envAddress}/${route}`;\n  }\n \n  private generateHeaders() {\n    let requestOptions : Object = {\n      headers: new HttpHeaders({'Content-Type': 'application/json'}),\n      responseType:'text'\n    }\n    return requestOptions\n  }\n}\n"],"sourceRoot":""}